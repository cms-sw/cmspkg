#!/usr/bin/env python3
from sys import exit
from subprocess import getstatusoutput as cmd
from os import environ
from os.path import exists,dirname,basename
base_dir = "/data/cmssw"
uri = environ['SCRIPT_NAME']

doc_header=False

def redirect(path):
  print ("Location: /%s\n\n" % (path))
  exit(0)

def doc_head():
  global doc_header
  if doc_header: return
  doc_header=True
  print ("Content-type: text/html\n\n<html><head></head><body>\n")

def show_repos():
  doc_head()
  repos = {}
  rdir = base_dir+"/repos"
  if exists (rdir):
    e,o = cmd("ls -d %s/*/.cmspkg-auto-cleanup 2>/dev/null" % rdir)
    for r in o.split("\n"):repos [basename(dirname(r))] = 1

  e, o = cmd ("ls -d %s/*/RPMS/cache 2>/dev/null" % base_dir)
  for r in o.split("\n"): repos [basename(dirname(dirname(r)))] =1

  for r in sorted(repos.keys()):
    print ("<a href='%s/%s'>%s</a><br>\n" % (uri,r,r))

def show_archs(repo, archs={}, xrepo=None):
  doc_head()
  if not xrepo: xrepo=repo
  rdir = "%s/repos/%s" % (base_dir, repo)
  if exists (rdir):
    e,o = cmd("ls -d %s/*/latest 2>/dev/null" % rdir)
    for r in o.split("\n"):
      archs [basename(dirname(r))] = 1
    prepo = '.'.join(repo.split(".")[:-1])
    if prepo:
      show_archs(prepo, archs, xrepo)
      return
  e, o = cmd ("ls -d %s/%s/apt/*/base 2>/dev/null" % (base_dir, repo))
  for r in o.split("\n"):
    archs [basename(dirname(r))] =1

  for r in sorted(archs.keys()):
    print ("<a href='%s/%s/%s'>%s</a><br>\n" % (uri, xrepo, r, r))

def show_rpms(repo, arch, rpm_to_get=None):
  sort  = ""
  order = ""
  try:
    query = environ['QUERY_STRING'].split(";")
    for item in query:
      idx = item.split("=",1)
      if idx[0]=="C" and idx[1] in ["N","M","S"]: sort=item
      if idx[0]=="O" and idx[1] in ["A", "D"]:    order=item
  except: pass
  if sort=="": sort  = "C=N"
  if order=="":order = "O=A"

  next_opt = ["C=N;O=A" , "C=M;O=A", "C=S;O=A"]
  ldopt = "-lh"
  if sort == "C=M":
    if order == "O=A":
      ldopt = "-lrth"
      next_opt[1] = "C=M;O=D"
    else: ldopt = "-lth"
  elif sort == "C=S":
    if order == "O=A":
      ldopt = "-lrSh"
      next_opt[2] = "C=S;O=D"
    else: ldopt = "-lSh"
  elif order == "O=A":
    next_opt[0] = "C=N;O=D"

  prepo = repo
  rdir = ""
  found = False
  while not found:
    rdir = "%s/repos/%s/%s" % (base_dir, prepo, arch)
    if not exists (rdir):
      prepo = '.'.join(prepo.split(".")[:-1])
      if prepo=="":break
    else:
      found = True
  rpms={}
  orpms = []
  if found:
    e,o = cmd("ls %s --time-style='+%%d-%%b-%%Y %%H:%%M' %s/[0-f]*/RPMS/*/*/*.rpm 2>/dev/null" % (ldopt, rdir))
    for r in o.split("\n"):
      xx = r.split(" ")
      rpm = xx[-1].replace(base_dir+"/","")
      nrpm = basename(rpm)
      if rpm_to_get:
        if rpm_to_get==nrpm: redirect("/cmssw/%s" % rpm)
        continue
      orpms.append(nrpm)
      rpms[nrpm] = ["<a href='/cmssw/%s'>%s</a>" % (rpm,nrpm),"%s %s" % (xx[-3],xx[-2]), xx[-4]]
  else:
    prepo = repo
    while not found:
      rdir = "%s/%s/apt/%s" % (base_dir, prepo, arch)
      if not exists (rdir):
        prepo = '.'.join(prepo.split(".")[:-1])
        if prepo=="":break
      else:
        found = True
    if found:
      e,o = cmd("ls %s --time-style='+%%d-%%b-%%Y %%H:%%M' %s/%s/RPMS/cache/*/%s/*.rpm 2>/dev/null" % (ldopt, base_dir, prepo, arch))
      for r in o.split("\n"):
        xx = r.split(" ")
        link = xx[-1] 
        rpm = xx[-1].replace(base_dir+"/","")
        nrpm = basename(rpm)
        if rpm_to_get:
          if rpm_to_get==nrpm: redirect("/cmssw/%s" % rpm)
          continue
        orpms.append(nrpm)
        rpms[nrpm] = ["<a href='/cmssw/%s'>%s</a>" % (rpm,nrpm),"%s %s" % (xx[-3],xx[-2]), xx[-4]]
  if rpm_to_get: exit(1)
  if "C=N" == sort:
    orpms = sorted(orpms)
    if "O=D" == order:
      orpms = reversed(orpms)
  doc_head()
  print ("<table>\n")
  print ('<tr><th><a href="?%s">Name</a></th><th><a href="?%s">Last modified</a></th><th><a href="?%s">Size</a></th></tr>' % (next_opt[0], next_opt[1], next_opt[2]))
  for r in orpms:
    print ("<tr>", end="")
    for x in rpms[r]: print ("<td>%s</td>" % x, end="")
    print ("</tr>\n")
  print ("</table>\n")

rpath = ""
try: rpath = environ['PATH_INFO'].strip("/")
except: pass

if (rpath==""):
  show_repos()
else:
  from re import match
  items = rpath.split("/")
  ReRepo = '^[a-zA-Z0-9_-]+((\.[a-zA-Z0-9_-]+)+|)$'
  ReArch = '^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$'
  if not match(ReRepo,items[0]):
    show_repos()
  elif len(items)==1:
    show_archs(items[0])
  elif len(items)==2:
    if not match(ReArch,items[1]): show_archs(items[0])
    else: show_rpms (items[0], items[1])
  elif len(items)==3:
    if not match(ReArch,items[1]): show_archs(items[0])
    else: show_rpms (items[0], items[1], items[2])
  else: show_repos()

print ("</body></html>\n")

